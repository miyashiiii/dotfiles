source ~/.xonshrc-work

$PATH.append("/usr/local/bin")
$PATH.append("/Users/miyashita/.nodebrew/current/bin")
$PATH.append("/usr/local/octave/3.8.0/bin")
$PATH.append("~/.npm-global/bin")

$DOTFILES = f'{$HOME}/dotfiles'
# プロンプト上には場所だけ出す
$PROMPT = "{YELLOW}[{cwd}] {CYAN}{curr_branch} {GREEN}$ "

# rc
aliases['sx'] = 'source ~/.xonshrc'
aliases['vx'] = 'vi ~/.xonshrc'
aliases['vv'] = 'vi ~/.vimrc'

# ls
def _ls(args):
    args = args[0].replace('-', '') if args else ''
    if $(pwd).rstrip(os.linesep) == $DOTFILES:
        $(which -s ls) @(f"-{''.join(set(args + 'aG'))}")
    else:
        $(which -s ls) @(f"-{''.join(set(args + 'G'))}")
aliases['ls'] = _ls
aliases['la'] = 'ls -a'
aliases['ll'] = 'ls -la'

# s3
aliases['sss'] = 'aws s3'

# ssh
aliases['ssh'] = 'ssh -i ~/.ssh/miya-work.pem -L 6008:localhost:6006'
aliases['ssh2'] = 'ssh -i ~/.ssh/miya-work.pem -L 6009:localhost:6006'

# scp
aliases['scp'] = 'scp -i ~/.ssh/miya-work.pem'

# cd
aliases['cdf'] = f'cd {$DOTFILES}'
aliases['til'] = f'cd {$TIL}'

# img
aliases['ic'] = 'imgcat'
aliases['il'] = 'imgls'

# aws
aliases['ec2ls'] = 'aws ec2 describe-instances --query "Reservations[*].Instances[0].{Name:Tags[?Key==`Name`].Value,PublicDnsName:PublicDnsName}" --filters "Name=tag:CreatedBy,Values=Y.Miyashita"'

# git 
aliases['vg'] = 'vi ~/.gitconfig'
aliases['ga'] = 'git a'
aliases['gd'] = 'git d'
aliases['gl'] = 'git l'
aliases['gs'] = 'git s'

# 日報
import datetime
def _nippo():
    n = datetime.datetime.now()
    weekdays = ["月","火","水","木","金","土","日",]
    nippo_str = f"【日報】{n.year}年{n.month:02}月{n.day:02}日({weekdays[n.weekday()]}) 宮下"
    $(echo -n @(nippo_str) | pbcopy) 
    print(f"copy to clipboard: {nippo_str}")
aliases['nippo'] = _nippo

# vox
xontrib load vox

# ディレクトリ名を入力すればCDできる
$AUTO_CD = True

# 各ファイルのシンボリックリンク作成
from pathlib import Path
def make_ln(filename):
    $(ln -sf $DOTFILES/@(filename) $HOME/@(filename))

ln_ignore = [
        ".git",
        ".git-ignore",
        "README.md"
        ]

for filepath in Path($DOTFILES).glob("*"):
    if filepath.name in ln_ignore:
        continue
    make_ln(filepath.name)

# シンボリックリンク作成
def _lndf(args):
    if len(args) != 1:
        print('usage: lndf filename') 
	return
    make_ln(args[0])
aliases['lndf'] = _lndf

# ライブラリの実行時import
# https://vaaaaaanquish.hatenablog.com/entry/2017/12/26/190153
# xonsh上で使うときがありそうなライブラリはlazyasdで補完時、実行時に読み込み
from xonsh.lazyasd import lazyobject
import importlib
lazy_module_dict = {
    'sys': 'sys',
    'random': 'random',
    'shutil': 'shutil',
    'pd': 'pandas',
    'np': 'numpy',
    'requests': 'requests',
    'os': 'os',
    'plt': 'matplotlib.pyplot',
        }
for k,v in lazy_module_dict.items():
    t = f"@lazyobject\ndef {k}():\n    return importlib.import_module('{v}')"
    exec(t)
